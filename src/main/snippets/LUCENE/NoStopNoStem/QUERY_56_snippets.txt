LUCENE_NoStopNoStem

Query
Articles relation the algebraic theory of semigroups and monoids
to the study of automata and regular languages.

Top 100 Results (4 millisecs)


DocID: CACM-2112

recognition <<and>> parsing may be treated as special cases <<of>> <<the>> translation  
<<the>> transla<to>r consists <<of>> mealy form finite-state au<to>mata interacting  
by means <<of>> a pushdown stack.  within <<the>> framework described string  


DocID: CACM-2650

<<the>> calculation <<of>> b by <<the>> method presented requires  
time proportional <to> |a|, <<the>> number <<of>> characters  
a was originally intended <to> be a string <<of>> l.  


DocID: CACM-1678

catalog description <<of>> each course is applied <<and>> <<the>>  
role <<of>> each <<of>> <<the>> courses in <<the>> graduate program  
a number <<of>> courses are listed in <<the>> area  


DocID: CACM-2327

development <<of>> <<the>> <<the>>ory.  this paper suggests <<the>> ways  
a source <<of>> ideas for au<to>mata <<the>>ory-<<the>> <study>  
in which au<to>mata <<the>>ory might evolve over <<the>>  


DocID: CACM-2921

<<the>> right <<of>> <<the>> h<<and>>le <<and>> <<the>> left end, after <<the>>  
<<and>>, as a special case, <regular> expressions,  
<regular> right part grammars <<and>> <<the>>ir parsers  


DocID: CACM-2931

<<of>> computation  in a way, <<the>> statics <<of>> <<the>> problem   
<<of>> explanation <to> go from <<the>> conceptual ideas <to>  
in <<the>> o<<the>>r direction for <<the>> more applied parts <<of>>  


DocID: CACM-1665

<<of>> <<the>> nature <<of>> <<the>> items being evaluated.  if <<the>>  
<<and>> character count in <<the>> item.  <<the>> processors  
<<the>> practical application <<of>> <<the>> <<the>>ory <<of>>  


DocID: CACM-2061

<<the>> algorithm is claimed <to> be particularly useful in <<the>>  
<<the>> definition <<of>> a context-free grammar <<and>> <<the>> working <<of>> a  
<<of>> a context-free grammar are defined.  finally, <<the>> algorithm is described;  


DocID: CACM-2645

<<of>> <<the>> two <languages> are included.  <<the>> limitations <<of>>  
on <<the>> analysis <<of>> algorithms, <<and>> some <<of>> <<the>> directions  
<<the>> sound processor is a set <<of>> procedures  


DocID: CACM-1739

<<the>>n accepts <<the>> text <to> be searched as input <<and>> produces  
an implementation <<of>> this method in <<the>> form <<of>> a compiler  
<<the>> text matches <<the>> given <regular> expression.  examples,  


DocID: CACM-2449

<<of>> structured variables based on simple au<to>mata  
<<the>>ory is presented. <<the>> technique <<of>>fers a deterministic  
a simple technique for <<the>> symbol-table lookup  


DocID: CACM-2470

<<the>>ory  or its derivatives  for <<the>> concise <<and>>  
with <<the>> use <<of>> <<the>> paradoxical combina<to>r, y.  <<the>>  
<<the>> abstractions used informally in <<the>> body <<of>> <<the>> paper.  


DocID: CACM-2323

preferable <to> a less general effort <to> make <algebraic>  
<to> differential equations.  such a <<the>>ory is  
<<the>>n <<the>> prospects for a general <<the>>ory <<of>> functions  


DocID: CACM-1453

<<the>> use <<of>> <<the>> kleene <regular> expression notation  
<languages>, including some sublanguage <<of>> algol.  
a h<<and>> calculation result <<of>> <<the>> application <<of>> <<the>> algorithm  


DocID: CACM-2842

by d. scott <<and>> c. strachey.  <<the>> application <<of>> <<the>> <<the>>ory  
<<the>> paper presents a formal definition <<of>> <<the>> language gedanken.  
<<the>> denotational semantics <<of>> programming <languages>  


DocID: CACM-1154

<<of>> <<the>> length <<of>> <<the>> input,  3  restrict <<the>> <to>tal amount  
or all <<of>> <<the>> following:  1  restrict <<the>> manner in  
<to> a finite-state machine <<and>> <<the>>n performing any  


DocID: CACM-2302

<to> employment is part <<of>> <<the>> more general <relation>  
<<of>> <<the>> entire labor force.  because <<of>> <<the>> central importance  
<<the>> individual worker, in <<the>> nature <<and>> amount  


DocID: CACM-2932

<<the>> framework for research in <<the>> <<the>>ory <<of>> complexity  
<<and>> methods.  illustrative examples <<of>> practical  
complexity <<of>> computations, <algebraic> complexity,  


DocID: CACM-1253

an attempt <to> present its flavor.  a brief description <<of>>  
<to> <<the>> reader familiar with <algebraic> <languages>.  
simscript <<and>> programmed entirely in an <algebraic>  


DocID: CACM-1867

expected length <<of>> <<the>> j-th sequence generated by <<the>>  
one is interested in <<the>> ratio l j  <<of>> <<the>>  
in <<the>> replacement-selecting technique <<of>> sorting,  


DocID: CACM-1961

<<of>> arcs.  <<the>> speed is also related <to> <<the>> number <<of>> circuits  
<<the>> speed <<of>> <<the>> algorithm <to> <<the>> number <<of>> vertices <<and>> <<the>> number  
circuits <<of>> a graph.  <<the>> algorithm can be easily modified <to> find all  


DocID: CACM-0464

description <<of>> <<the>> syntax that is <to> be used.  <<the>>  
<to> perform syntactic analysis.  <<the>> input <to> this  
consists <<of>> a trace table that expresses <<the>>  


DocID: CACM-1048

<<and>> ideal fluid flow, <<and>> stress concentration <<the>>ory  
a nondegenerate portion <<of>> <<the>> x-axis <<and>> exceedingly  
<to> <<the>> <study> <<of>> an elliptic partial differential equation.  


DocID: CACM-2051

<<the>> <regular> sound correspondences between genetically related <languages>.  
<<of>> suspected cognates.  <<the>> program tabulates <<the>> correspondences,  
<<and>> uses list processing techniques <to> sort <<and>> count <<the>>m.  


DocID: CACM-2326

following <<the>> fix point <<the>>ory <<of>> scott, <<the>>  
<<of>> computer programs, including correctness, termination, <<and>> equivalence.  
<<of>> <<the>> least fix points <<of>> recursive programs.  this  


DocID: CACM-2134

<<the>> assignment problem <to> rectangular matrices  
algol procedure are discussed, <<and>> a <relation> between  
an extension <<of>> <<the>> munkres algorithm for  


DocID: CACM-1991

au<to>mata, finite au<to>mata, singly generated au<to>mata, au<to>morphisms,  
on <<the>> number <<of>> au<to>morphisms <<of>> a singly generated au<to>ma<to>n  
genera<to>rs, length <<of>> state, minimal-length genera<to>rs, orbit  


DocID: CACM-2809

s. householder, <<the>> character <<and>> use <<of>> <algebraic>  
<<of>> order unit norms, l-norms <<and>> m-norms.  an example  
<<of>> application <to> opera<to>r norms is given concerning  


DocID: CACM-1911

<<and>> its inverse is given in <<the>> form <<of>> lisp function definitions.  
schemata, <<the>> conditions under which <<the>>y are <to> be  
<<of>> both <<the>> generative procedure <<of>> this paper  


DocID: CACM-2580

<to> <<the>> layman.  it appears that full-blown music <<the>>ory  
<<the>>ory plus additional heuristics.  fundamental <to> <<the>>  
on <<the>> productions deciding when <<and>> <to> what extent  


DocID: CACM-1258

<<of>> an extended arithmetic package, specific reference is made <to> this program.  
<<the>>ory, arithmetic must be carried out <to> a degree  
<<the>> general problems associated with <<the>> design  


DocID: CACM-1334

mechanization <<of>> tedious algebra: <<the>>  
<<of>> planetary <<the>>ory.  <<the>> newcomb opera<to>rs are expressed  
tables <<of>> formulas for <<the>> newcomb opera<to>rs  


DocID: CACM-2166

<to> illustrate <<the>> relative simplicity <<of>> <<the>>  
is paid <to> <<the>> use <<of>> poisson series, <<and>>  
<<of>> au<to>mated <algebraic> manipulation which  


DocID: CACM-1046

<<of>> <<the>>ir system. it exp<<and>>s on some points that <<the>> original  
<to> <<the>> material published in <<the>> listed references.  
have developed for <<the>> ferranti atlas computer.  <<the>>  


DocID: CACM-1397

<<the>> acm symposium on symbolic <<and>> <algebraic>  
proceedings <<of>> <<the>> acm symposium on symbolic <<and>> <algebraic> manipulation  
<<and>> <algebraic> manipulation.  <<the>> program committee consisted  


DocID: CACM-2165

<<of>> <<the>> field equations in <<the>> presence <<of>> matter in  
including <<the>> derivation <<of>> <<the>> field equations, <<the>>  
<<the>> paper describes some applications <<of>> symbolic  


DocID: CACM-2603

<<the>> class <<of>> reducing transition <languages>  
was shown by morris <to> be a proper superclass <<of>> <<the>>  
<languages> <<and>> deterministic <languages>  


DocID: CACM-2305

<<the>> 1940's <to> devise a notational <<and>> conceptual  
<<the>>ory <<of>> programming, his<to>ry <<of>> programming  
<<of>> <to>day's programming <languages>  


DocID: CACM-1216

<<the>> chain rule is applied <<and>> <<the>> result is edited <to>  
prints out <<the>> symbolic derivative <<of>> an absolutely  
no use is made <<of>> list-processing <languages>.  


DocID: CACM-1834

<study> <<of>> geometry <<and>> have later been extended <to>  
by use <<of>> techniques which were first applied in <<the>>  
<<of>> sets <<of>> axioms <<and>> rules <<of>> inference  


DocID: CACM-1223

<to> remove locally constant expressions <<and>> recursively  
<<of>> a fortran-like language, although <<the>> technique  
by <<the>> first two passes, allows <<the>> compiler  


DocID: CACM-1806

<to> avoid this difficulty <<and>> <to> improve <<the>> rate <<of>>  
<<the>> original method are proposed <<and>> a program  fortran   
given <<and>> a critical review <<of>> relating literature is  


DocID: CACM-3124

level <<of>> arrays <<and>> new opera<to>rs <to> assist in <<the>>  
apl array <to> be a recursive data structure equivalent <to> a tree structure  
arrays <<of>> numbers <<and>> characters.  an extension <<of>> apl is proposed that  


DocID: CACM-2167

<<of>> a designer who wants <to> construct a useful <<and>>  
<<the>> point <<of>> view <<of>> a user who needs <to> comprehend  
<<the>> spectrum <<of>> approaches <to> <<the>> design <<of>> au<to>matic simplification  


DocID: CACM-1781

<<the>> writing <<of>> transla<to>rs <<of>> programming <languages>  
is presented.  <<the>> formal <study> <<of>> syntax <<and>> its application  
a critical review <<of>> recent efforts <to> au<to>mate  


DocID: CACM-3077

by <algebraic> laws <<and>> are carried out in <<the>> same language  
classes <<of>> programs.  a new class <<of>> computing systems  
semantics <to> state transitions, <<the>>ir division <<of>> programming  


DocID: CACM-2616

on <<the>> conversion <<of>> programs <to> decision tables: method <<and>> objectives  
<<the>> problems <<of>> converting programs <to> decision  
in practice.  extensions <to> <<the>> <<the>>ory <<of>> computation  


DocID: CACM-1366

<<and>> implementers as well as users.  <<the>> second  
<<the>> conclusion <<of>> <<the>> paper is that <<the>> packages now  
implications <<of>> this analysis for designers <<of>> <languages>,  


DocID: CACM-2813

<study>  cosers  is briefly described.  <<the>> motivation,  
organization, <<and>> schedule for this nsf supported <study>  
<<the>> computer science <<and>> engineering research <study>  cosers   


DocID: CACM-3031

<<the>> process <<of>> proving <<the>> correctness <<of>> an implementation  
using <algebraic> axioms.  <<the>> virtue <<of>> <<the>>se  
<<the>> use <<of>> <algebraic> axiomatizations can simplify  


DocID: CACM-3199

o<<the>>r manipula<to>rs is <<the>> assignment <<of>> types <to> all expressions <<and>> <<the>> use  
<<and>> <<of>> finding <<the>> highest common fac<to>r <<of>> two polynomials. also included are  
ii <to> manipulate <algebraic> expressions. algem's basic <algebraic> operations are  


DocID: CACM-1703

<<the>> user public wants st<<and>>ardization <<and>>  
with <<the>> language.  explicit st<<and>>ardization <<of>> <<the>> language  
<<of>> <<the>> language.  use <<of>> <<the>> organizational trademark  


DocID: CACM-2719

<<of>> such analysis, <<and>> describes a system,  
program analysis, describes <<the>> operation <<of>> metric, explains  
for <<the>>ir running time expressed in terms <<of>> size <<of>> input.  


DocID: CACM-3119

<<the>> impact <<of>> distributions <<and>> disciplines  
simple queueing models are used <to> <study> <<the>> performance trade<<of>>fs <<of>>  
service disciplines <<and>> distributions, level <<of>> multiprogramming,  


DocID: CACM-0397

<<and>> identification field  columns 68-80 .  <<the>> format  
for <<the>> reference material is flexible, while <<the>>  
matrix <<of>> descrip<to>rs, an entry number, <<and>> <<the>> kind,  


DocID: CACM-2705

<<of>> <<the>> his<to>ry <<of>> artificial, auxiliary <languages> it  
<<of>> general utility <<and>> studies <<of>> questions  
ma<<the>>matics <<and>> natural <languages>.  <<the>> split between  


DocID: CACM-1649

than <<the>> fortran iv feature.  <<the>> hollerith names, <<the>>  
in <relation> <to> general purpose data directed input <<and>>  
location, <<the>> mode <<and>> <<the>> dimensions <<of>> a variable  


DocID: CACM-0724

work, <<and>> mostfind <<the>>ir jobs <<of>>fer high level <<of>> pr<<of>>essional  
favorable light, on <<the>> whole.  personalities seem <to>  
<<of>> programmers <to>ward <<the>>ir careers <<and>> jobs.  a very  


DocID: CACM-2032

<<and>> <<the>>ir <relation> <to> trees studied in <<the>> past is explainedesults for <<the>>  
function <to> define tree structure.  two types <<of>> such trees are examined,  
probability distributions <<of>> path lengths are derived <<and>> illustrated.  


DocID: CACM-3150

<<and>> objects with which we build.  this paper analyzes some <<of>> <<the>>  
<to> shift our attention away from <<the>> detailed specification <<of>>  
as high level <languages> enabled <<the>> programmer <to> escape from <<the>>  


DocID: CACM-1101

<<the>> place <<of>> logical design <<and>> switching  
<<the>>ory in <<the>> computer curriculum  


DocID: CACM-1425

<to> a suitable extension <<of>> <<the>> given set <<and>> <<of>>  
methods <<of>> flow diagrams are given.  <<the>> first has  
<<the>> new machine belongs <to> <<the>> family, elsewhere  


DocID: CACM-2163

<<the>> initial approach <<of>> <<the>> committee has been <to> describe  
<study>.  preliminary conclusions are presented on <<the>>  
use <<of>> computers in organizations, <to> classify <<the>>  


DocID: CACM-3012

<<and>> retrieval system.  a moni<to>r built in<to> <<the>> computer  
<<the>> use <<of>> this system.  <<the>> implications  
<<of>> <<the>> <study> for <<the>> design <<of>> similar systems are discussed.  


DocID: CACM-3203

<<the>> general recursive algebra <<and>> differentiation assistant  grad assistant   
in which a large amount <<of>> routine manipulation is <to> be done by a program  
grad assistant - a program for symbolic <algebraic> manipulation <<and>>  


DocID: CACM-3148

<<of>> particular <languages> <<and>> machines.  it appears <to> be useful for  
<<and>> transaction key, <<the>> methodology is shown <to> be independent  
program <<of>> development in advanced programming <languages>, <<and>> <relation>s  


DocID: CACM-2164

<<of>> <<the>> unsolvability <<of>> <<the>> problem for a class <<of>> functions  
degree <to> moses' sin.  <<the>> second, from <algebraic>  
<<and>> for risch's decision procedure for <<the>>  


DocID: CACM-2316

<<of>> 1972.  key concepts o<<the>>r than specific <languages> are discussed.  
<<of>> programming <languages>  = higher level <languages> .  
<<of>> <languages> are given.  <<the>> major <languages> are listed  


DocID: CACM-2779

<<the>> recurrence <relation> between orthogonal polynomials  
data fitting.  a variant <<of>> <<the>> classical algorithm  
<<and>> <<the>> reason for its improved performance is explained.  


DocID: CACM-2210

<<the>> desired program is extracted from <<the>> pro<<of>>.  <<the>>  
<<the>> induction rule used <<and>> <<the>> form <<of>> <<the>> program  
numbers,lists, <<and>> trees,  in order <to> construct  


DocID: CACM-1934

<to> a specific problem under <<the>> <<the>>ory <<of>> graphs.  
<<the>> choice <<of>> <<the>> best order <<of>> computation  
a description is given <<of>> how a tree representing <<the>>  


DocID: CACM-2648

assembly language <<and>> makes heavy use <<of>> <<the>> macro  
can be used <to> determine <<the>> unique fac<to>rization <<of>> large integers.  
number <<the>>ory package, trial division, multiprecise  


DocID: CACM-2423

table entries <<and>> 82 words are links <to> code  
words <<of>> 60-bit core memory <<of>> which 140 words are parsing  
that syntactic rule is applied in <<the>> parse <<of>> a  


DocID: CACM-1752

<to> alternate hardware characteristics <<and>> <<the>>  
<<the>> system performance relative <to> <<the>> characteristics  
<<and>> <<the>> results <<of>> comparative simulation  


DocID: CACM-2129

a brief <study> is made <<of>> <<the>> propagation <<of>> errors  
recursive computation <<of>> successive derivatives <<of>>  e^x /x  
<study> <<of>> error propagation  


DocID: CACM-1098

<<of>> s<to>rage, use <<of>> pushdown s<to>res, <<and>> use <<of>>  
programming <languages> which, among <<the>>m, exhibit all <<the>>  
some heuristics <to> aid in <<the>> selection <<of>> one <<of>> <<the>>se  


DocID: CACM-0124

<<the>> assignment problem is formulated <<and>> briefly  
between solution time <<and>> <<the>> size <<of>> <<the>>  
an algorithm for <<the>> assignment problem  


DocID: CACM-1471

<<the>> semantics are defined for a number <<of>> meta-instructions  
segments <<and>> o<<the>>r computing objects, <<the>> names <<of>> which  
debugging, <<and>> <<the>> sharing among users <<of>> memory  


DocID: CACM-1567

polynomials in <<the>> light <<of>> <<the>> <<the>>ory <<of>> <<the>>  
technique for <<the>> determination <<of>> <<the>>  
<<and>> lends insight <to> previously published work  


DocID: CACM-2803

this paper is devoted <to> <<the>> <study> <<of>> connections  
between pseudoinverses <<of>> matrices <<and>> conjugate  
pseudoinverses <<and>> conjugate gradients  


DocID: CACM-2052

independently <<of>> <<the>> <relation> <<of>> <<the>> activities in conflict <to> additional  
constraints <<of>> time <<and>> space.  each connected component <<of>> such a graph,  
corresponds <to> a set <<of>> events that must be scheduled at different times.  


DocID: CACM-1394

<<of>> <<the>>se calculations take several months <to> complete, although  
outlined, <<and>> <<the>>ir representation in <<the>> computer  
computation <<of>> <algebraic> properties <<of>> elementary  


DocID: CACM-2998

nearby in memory.  <<the>> use <<of>> such <regular>ities in <<the>>  
<to> lists usually poin t <to> a location physically  
information content <<of>> a car-cdr pair in <<the>> programs  


DocID: CACM-1072

classes, given <<the>> element pairs defining <<the>> equivalence <relation>.  
<<of>> equivalence, dimension <<and>> common declarations  
equivalence classes with one scan <<of>> <<the>> equivalence  


DocID: CACM-1906

<to> resolve conflicts for lines <<and>> vias below <<the>> aperture  
<regular> pattern <<of>> lines, pins  terminals , <<and>> vias  
down <<the>> board.  <<the>> planned routing is <<the>> basis for  


DocID: CACM-0536

values <<of>> <<the>> ai which minimizes <<the>> sum <<of>> squares <<of>>  
<<of>> a distinguished observable, say zm.  if <<the>> solution  
gives rise <to> a function n which is nonlinear in <<the>> ai,  


DocID: CACM-2545

shown <to> be a generalization <<of>> a formal language.  
a <<the>>ory <<of>> discrete patterns <<and>> <<the>>ir implementation in snobol4  
in snobol4 are given.  <<the>> general approach is <to> create,  


DocID: CACM-1809

<to> ma<<the>>matical problems.  much <<of>> <<the>> emphasis is on scientific  
numerical analysis is <<the>> <study> <<of>> methods <<and>>  
<<and>> emphasis.  <<the>> numerical analysis program  


DocID: CACM-2227

is given <<of>> <<the>> purpose <<of>> <<the>> program <<and>> <<the>> method  
constructing <<the>> program pro<<of>> during <<the>> process <<of>> coding  
<<of>> logical errors.  <<the>> pro<<of>> <<of>> termination is treated  


DocID: CACM-1948

groups <<of>> finite groups, character tables, <<and>> commuta<to>r  
diverse range <<of>> problems in group <<the>>ory.  
<<the>> most important areas <<of>> application at present are  


DocID: CACM-1887

a recursive <relation> for <<the>> determinant <<of>> a pentadiagonal matrix  
minors, is developed for <<the>> determinant <<of>>  
a recursive <relation>, relating leading principal  


DocID: CACM-2017

from <<the>> experimental effort is used <to> arrive at a set <<of>>  
conceived <<and>> implemented at ibm research in order <to> explore <<the>>  
<<the>> experimental sort programs <<and>> analysis <<of>> <<the>> performance  


DocID: CACM-1533

<<the>> effects <<of>> changes in <<the>> executive system <<and>>  
in one <<of>> its compilers.  fur<<the>>r applications <<of>>  
with <<the>> aid <<of>> extensive data on <<the>> system's operation.  


DocID: CACM-1900

have revealed <<the>> need for maintenance <<of>> <<the>> st<<and>>ards.  
<study> <<and>> application <<of>> <<the>> st<<and>>ard specifications  
<to> <<the>> st<<and>>ard specifications, <<and>> completed interpretations are reported.  


DocID: CACM-0068

related <to> computers will develop in<to> disciplines <<and>>  
<<the>> united states in <<the>> fields <<of>> computers, data  
as such are <<the>> legitimate province <<of>> <<the>> university  


DocID: CACM-2148

<<and>> simple introduction <to> both algol 68 <<and>>  
<<the>> language permits <<the>> composition <<of>> values <<and>> actions,  
<<the>> main features <<of>> algol 68 are explained  


DocID: CACM-1824

<<the>> various pieces  at all levels  <<of>> <<the>> parse.  it  
<<of>> parse-requests as a subroutine, <<and>> parse-time  
in special purpose <languages> such as snobol4 <<and>>  


DocID: CACM-3202

<<and>> obtaining analytic derivatives was translated in<to> that <<of>> identifying <<and>>  
notation <<and>> s<to>red in <<the>> computer as a string <<of>> bcd characters with all  
does not exceed 5000 characters. <<the>> problemm <<of>> performing <algebraic> operations  


DocID: CACM-0671

<<the>> early conceptual needs <<of>> <<the>> bank <to> <<the>> consummation  
led <to> <<the>> development <<of>> <<the>> telefile system <<of>>  
<<the>> teleregister corporation.  operation <<of>> <<the>> on-line  


DocID: CACM-1975

initiated. <<the>> uniqueness <<of>> this method will cause each trial cipher in <<the>>  
two ciphers <<of>> <<the>> divisor, one or at most two adjustments <to> <<the>> original  
divisor <<and>> dividend must be performed before <<the>> division operation can be  

