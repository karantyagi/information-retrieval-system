LUCENE_NoStopNoStem

Query
Results relating parallel complexity theory (both for PRAM's and
uniform circuits).

Top 100 Results (4 millisecs)


DocID: CACM-1961

in the graph to give a relation between speed <and> <complexity>.  
algorithm, graph <theory>, circuit search  
extensions to undirected <and> s-graphs are discussed.  


DocID: CACM-1368

<and> exhaustively all the hamiltonian <circuits>.  
<both> directed <and> nondirected arcs, the paper  
systematic generation of hamiltonian <circuits>  


DocID: CACM-2932

the framework <for> research in the <theory> of <complexity>  
<complexity> of computations, algebraic <complexity>,  
<complexity> of computations  


DocID: CACM-1856

assertions <for> the memory <and> the capabilities <for>  
<and> capabilities <for> <relating> text to such  
to a general process <for> comprehending language, <and>  


DocID: CACM-0320

<and> so eliminate the need <for> flow charting <and> h<and> coding.  
operations, systems <and> <circuits>.  a set of rules <for>  
<both> the sequential <and> <parallel> aspects of logic.  they  


DocID: CACM-2720

modeling, queueing <theory>, balancing,  
determining a policy <for> efficient allocation  
using 2314 <and> 3330 combinations are examined.  


DocID: CACM-2685

methods are developed <for> the <parallel> execution  
<parallel> computing, multiprocessor computers,  
the <parallel> execution of do loops  


DocID: CACM-2401

may be used <for> counting patterns on a matrix, <and>  
a <parallel> processing algorithm <for> shrinking  
counting binary patterns, shrinking, <parallel>  


DocID: CACM-2702

computational <complexity>, context-free grammars,  
binary the problem is complete <for> nondeterministic  
on the <complexity> of lr k  testing  


DocID: CACM-2220

<theory>, noiseless channel, sorting  
<both> modifications result in modification  
coding theorem <and> the communications concept  


DocID: CACM-1143

the experiments <and> <for> analyzing the data, <and> then  
best to select a uni<for>m technique <both> <for> running  
tracers on <both> human <and> animal subjects.  


DocID: CACM-2342

<for> the mutual exclusion problem <and> associated  
subproblems, in the <for>m of <parallel> programs, <and> in<for>mal  
operating systems, <parallel> processes  


DocID: CACM-2200

<for> devising division operations that produce <both> quotient  
<for> division yielding complement <results> are derived  
thus includes <both> two's <and> one's complement implementation.  


DocID: CACM-1309

<and> flexible presentation of <results> in either tabular  
a fundamental vehicle <for> accomplishing <both> manipulation <and> computation.  
reports, regardless of computational <complexity> or <for>mat  


DocID: CACM-1725

theorem <for> associative memories  
<circuits> indicate whether the individual digit  
columns contain digits of <both> values, or of only one  


DocID: CACM-2927

<and> the bit <complexity> to o n logn log log logn .  
involving space-time <and> additive-multiplicative  
number <theory>, linked list, preprocessing,  


DocID: CACM-1603

buffering, <and> task scheduling <and> provides  
a multiprogramming monitor <for> small machines  
additions provide a uni<for>m device to machine  


DocID: CACM-1957

in <parallel>, rather than evaluating subexpressions <and>  
<results> from any expression involving sets <and> set operators.  the  
the list set generator is defined <and> algorithms  


DocID: CACM-1911

of trans<for>mational <theory>.  to account <for> these phenomena  
<theory>, syntax, coordination, sentence  
applied, <and> conditions determining the sequence  


DocID: CACM-2227

documentation, program correctness, <theory>  
<relating> to general programming methodology are drawn.  
used.  a systematic technique is described <for>  


DocID: CACM-1888

mesh size <and> dynamic mesh size allocation.  <for> uni<for>m  
spline function methods <for> nonlinear boundary-value problems  
equation to be satisfied at the mesh points <results>  


DocID: CACM-0335

<for> nonlinear parabolic <and> ellipticboundary-value  
method offers substantial advantages in <both> time <and> accuracy.  
are solved numerically comparison of these <results>  


DocID: CACM-2189

permutation, graph <theory>, scheduling, combinatorial algebra  
each other, <and> is generated successively  
treating the same example <for> five vertices  


DocID: CACM-1595

<and> computed <results> are given <for> n <= 7.  
set is considered <both> theoretically <and> computationally.  
certain fundamental <results> are established,  


DocID: CACM-2327

automata <theory>, brain <theory>, network <complexity>,  
toward an automata <theory> of brains  
a source of ideas <for> automata <theory>-the study  


DocID: CACM-2134

a solution <for> rectangular matrices.  timing <results>  
operations research, optimization <theory>, assignment  
solution time <and> problem size is given.  


DocID: CACM-2809

methods in the <theory> of norms is demonstrated.  new <results>  
positivity <and> norms  
are given, in particular <for> the generalization  


DocID: CACM-3175

letters.  these probabilities are updated in <parallel> <for> all  
scheme <results> in improved estimates that finally lead to  
of the alphabet has one fixed substitute, <and> the word divisions  


DocID: CACM-2896

correctness <for> multiprocessing tasks  
with proving such <parallel> programs correct  
a <parallel> program, dijkstra's on-the-fly garbage  


DocID: CACM-2076

requires only minimal storage <and> computation <and> permits easy trade-off  
cubic splines on uni<for>m meshes  
simple spline representation, cardinal splines, uni<for>m mesh splines  


DocID: CACM-2560

that <both> the cpu <and> each of the storage  
the <results> are presented of an analysis of  
devices.  expressions are obtained <for> the long-run probability  


DocID: CACM-1825

<for> the entire grammar can be constructed <for> them.  
<and> if certain conditions <relating> these individual  
constructed <for> each part  using knuth's algorithm   


DocID: CACM-2110

n^2 bound <for> unambiguous grammars; <and> it runs in linear time on a large  
<and> petrick.  
compilers, computational <complexity>  


DocID: CACM-2784

<both> theoretically <and> practically.  the number of comparisons  
expected time bounds <for> selection  
selection, computational <complexity>, medians, tournaments, quantiles  


DocID: CACM-2580

<for> structural levels is not necessary <for> these pieces.  
<and> computer scientists.  
a method is described <for> composing musical  


DocID: CACM-3163

the insertion <and> deletion algorithms <for> oshb trees appear much  
an optimal insertion algorithm <for> one-sided  
more complicated than the corresponding algorithms <for> avl trees.  


DocID: CACM-2430

algorithm, graph <theory>, circuit search  
the elementary <circuits> of a graph [h]  algorithm a459   


DocID: CACM-1566

stated, <and> several basic <results> are proved.  a  
conventionally used best uni<for>m approximations  
the problem of obtaining starting values <for>  


DocID: CACM-1806

given <and> a critical review of <relating> literature is  
presented.  although in <theory> the method always  
the downhill method is a numerical method <for>  


DocID: CACM-0678

digital <circuits>, <and> generates corresponding  
discussed <for> increasing the sophistication of the boolean  


DocID: CACM-2931

<and> proofs, which are clean <and> without undue dependence  
through the developments in <complexity> <theory>.  
logic <and> programming languages  


DocID: CACM-3086

the ease of analysis <and> on the <results> produced.  
computational <complexity>, computational models,  
problems provide an excellent opportunity <for>  


DocID: CACM-2216

are in agreement with previously published <results> <for> the  
first moment in the cases of uni<for>m <and> nonuni<for>m  
distribution of branching ratio, <and> <for> the second moment  


DocID: CACM-2266

a highly <parallel> algorithm <for> approximating  
is conceptually suitable <for> <parallel> computation,  
<parallel> numerical algorithms, real polynomials,  


DocID: CACM-2596

<results> indicate that <for> a uni<for>m request distribution,  
buddy method, <for> dynamic storage allocation  
fragmentation is smaller <for> the weighted buddy  


DocID: CACM-2515

in which <both> the number of nodes <and> the number of arcs  
a procedure <for> constructing a minimal event-node  
relations without <parallel> activities is presented.  a  


DocID: CACM-3055

is shown to have expected swap <complexity> 5/9n.  
an improved program by refinement.  <both> of the  
dijkstra starts with a simple program <and> arrives at  


DocID: CACM-2195

the method described is suitable <for> <parallel>  
state can be computed in <parallel>, <and> the number  
global recognition, <parallel> processing, dynamic  


DocID: CACM-1601

a <parallel> processing environment are developed <and> measurements  
<parallel> numerical methods <for> the solution of equations  
classical iterative procedures <for> the numerical  


DocID: CACM-2326

fix point approach to the <theory> of computation  
following the fix point <theory> of scott, the  
of computer programs, including correctness, termination, <and> equivalence.  


DocID: CACM-3045

<and> <complexity> of <both> the parser <and> its table generator.  
a simple recovery-only procedure <for> simple precedence parsers  
no attempt to repair errors is made, yet parsing <and>  


DocID: CACM-2714

<for> merging a <and> b with the p <parallel> processors,  
<parallel> processing, <parallel> merging, <parallel> binary insertion  
|b|=n, m<=n, <and> p, p<=m, <parallel> processors  


DocID: CACM-2648

a design <for> a number <theory> package  
number <theory> package, trial division, multiprecise  
doubly linked list structures <for> storing multiprecise  


DocID: CACM-2649

of uni<for>m <and> reciprocal distributions.  
roundoff errors, uni<for>m distribution, reciprocal  
generalized logarithmic law is derived <for>  


DocID: CACM-2837

concrete computational <complexity>, upper bounds,  
new upper bounds <for> selection  
algorithm, <and> extends kirkpatrick's method to a  


DocID: CACM-1382

some projections concerning the supply <and> dem<and> <for>  
<and> discusses in broad terms how this in<for>mation  
three matters <relating> to the theme of the  


DocID: CACM-1932

the logarithmic error <and> newton's method <for> the square root  
fit is optimal <for> <both> types of error.  moreover, use  
<for> the calculation of the square root using  


DocID: CACM-2865

<and> program termination.  techniques <for> verifying  
an axiomatic method <for> proving a number  
these properties are presented <and> illustrated by  


DocID: CACM-2261

theoretical distributions <and> empirical distributions  
a method <for> generating values of continuous  
an approximate method <for> generating symmetric r<and>om variables  


DocID: CACM-2924

means <for> man-machine communication, <and> software <for>  
routines <for> structural, medical <and> graphical applications.  
of spline <theory> <and> algorithms, an in teractive  


DocID: CACM-2337

a sorting problem <and> its <complexity>  
sorting, computational <complexity>, computational combinatorics  
algorithms is given.  one new algorithm <for>  


DocID: CACM-1367

<for> <parallel>-by-bit data communication in ascii*  
character structure <and> character parity sense  


DocID: CACM-1424

a mapping from black diagrams of digital <circuits>  
with a list processing program written <for> the control  
automatic analysis of electronic digital <circuits> using list processing  


DocID: CACM-3096

problems of insertion, deletion, <and> retrieval,  
an optimal method <for> deletion in one-sided height-balanced trees  
<results> by hirschberg, indicates that, of the three basic  


DocID: CACM-2889

<for> maintaining hb[k] trees, <for> k>1, are also independent  
<and> experimental <results> that show the cost of maintaining  
in<for>mation storage <and> retrieval, searching  


DocID: CACM-2289

<and> typical row <and> column operations are readily  
algorithms <for> distance <and> spanning tree problems  
achieved by virtue of the possibilities <for> <parallel>  


DocID: CACM-2734

but <for> normal <and> uni<for>m distributions,  
efficiency.  <for> exponential <and> hyperexponential  
first-fit <and> best-fit <and> a better underst<and>ing  


DocID: CACM-1158

constructs <for> organizing <and> explicating <parallel>  
program structures <for> <parallel> processing  
to algol 60.  the constructs serve as meta-comm<and>s <and>  


DocID: CACM-3156

is permitted <for> fetch instructions but not <for> store instructions.  
graph <theory>, <parallel> processing, algorithms,  
computing connected components on <parallel> computers  


DocID: CACM-1828

<parallel> accessing, <parallel> search, file search,  
discussed <and> their per<for>mance compared.  
which will maximize the amount of <parallel>  


DocID: CACM-2380

uni<for>m file <and> i/o capabilities, <and> clean flexible  
it describes how the tenex design <and> implementation  
reliable service at several sites <and> through the  


DocID: CACM-2898

language providing <both> nonprocedural <and> sequential  
<parallel> programming, descriptive programming,  
facilities.  within a program, nonprocedural <and>  


DocID: CACM-2952

<and> two's-complement addition instructions  


DocID: CACM-2997

<and> conquer" technique <and> recursively apply  
computational <complexity>, convex hull, optimal algorithms,  
a merge procedure <for> two nonin tersecting convex hulls.  


DocID: CACM-2973

<parallel> computer, <parallel> sorting, <parallel> merge,  
routing <and> comparison steps, perfect shuffle.  
sorting on a mesh-connected <parallel> computer  


DocID: CACM-1262

a range of <parallel> operation <and> partly to  
procedure-oriented language statements to facilitate <parallel> processing  
in <parallel>.  the statements are do together  


DocID: CACM-1664

<results> are presented <for> cylindrical polar  
<and> spherical polar coordinate systems.  
an algorithm <for> deriving the equations of  


DocID: CACM-2598

in in<for>mation <theory> of noiseless coding.  the <results>  
<theory>, noiseless channel, sorting  
efficient flowcharts <and> the well-understood problem  


DocID: CACM-2232

<for> an illustrative example; graphical <and> tabular comparisons  
definition of width-at-angle, a theorem <relating>  
precise so that computer algorithms <for> feature extraction  


DocID: CACM-2936

<and> second, its worst-case <complexity> is o   
<for> general purpose discrete event simulation systems.  
recently algorithms have been presented <for> the  


DocID: CACM-2622

some human engineering problems <relating> to  
would be exceedingly difficult, <and> it is then  
argued that more rigorous <results> are unlikely.  finally,  


DocID: CACM-2196

<both> the computer's <and> the human's problem-solving  
<and> in the field of artificial intelligence.  
important class of scheduling <and> routing problems.  


DocID: CACM-2631

<and> promises considerable cost advantages.  
text searching, in<for>mation <theory>, file organization,  
<results> in a much simplified file organization  


DocID: CACM-1834

advantages, <both> theoretical <and> practical, may  
<and> rules, <and> a <for>mal proof of a simple theorem is  
an axiomatic basis <for> computer programming  


DocID: CACM-2851

two <for>mal models <for> <parallel> computation  
<parallel> program, correctness, verification,  
<for>mal verification of <parallel> programs  


DocID: CACM-1935

<and> offers new potential <for> in<for>mation retrieval systems.  
binary pattern, file examination, graph <theory>, in<for>mation  
a mathematical model is developed <for> the mean  


DocID: CACM-2060

functions <and> labels are permissible  <results> of functions <and> values  
limitations <and> possible extensions are discussed briefly.  
quasi-<parallel> processes, <and> other unorthodox control mechanisms.  


DocID: CACM-1536

explicit <for>mulas <for> the derivatives.  
<and> linkage to complex arithmetic subroutines.  
deriving <and> programming the evaluation of  


DocID: CACM-2918

memory are drawn from previous work <and> are used <for>  
advantages in terms of in terference <and> reliability <for>  
general purpose computation.  <results> <for> in terleaved  


DocID: CACM-1948

<and> <results> which have been obtained using  
computers in group <theory>: a survey  
group <theory>, coset enumeration, subgroup lattices,  


DocID: CACM-1567

technique <for> the determination of the  
<and> lends insight to previously published work  
polynomials in the light of the <theory> of the  


DocID: CACM-0950

<parallel> methods <for> integrating ordinary differential equations  
computations of highly <parallel> computers as can be  
in order to take full advantage <for> real-time  


DocID: CACM-2484

a basis <for> developing a <for>mal <theory> on the subject.  
subsets of a set, <and> an algorithm <for> selecting an  
different relations <and> algorithms <results> in different  


DocID: CACM-1719

<and> industry of the criteria <for> <and> methods of  
<and> optimizing is outlined; <and> the method is  
a methodology <for> calculating <and>  


DocID: CACM-1334

st<and>s <for> a simple differential operator, <and> the other  
newcomb operators of planetary <theory>  
tables of <for>mulas <for> the newcomb operators  


DocID: CACM-1795

optimal code <for> serial <and> <parallel> computation  


DocID: CACM-2785

goals <and> philosophy of the language, <and> discusses some  
<parallel> computation, <parallel> architecture  
glypnir-a programming language <for> illiac iv  


DocID: CACM-3075

fast <parallel> sorting algorithms  
a <parallel> bucket-sort algorithm is presented  
<parallel> processing, sorting, algorithms, bucket sort  


DocID: CACM-2255

computer composition, music <theory>  
comments on moorer's music <and> computer composition  


DocID: CACM-2628

minimal-total-processing time drum <and> disk scheduling disciplines  
discipline.  the <results> of the simulation studies  
moving-head drum <and> moving-head disk storage units are  

